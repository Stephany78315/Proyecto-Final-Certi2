AWSTemplateFormatVersion: '2010-09-09'
Transform:
- AWS::Serverless-2016-10-31
Description: my template
Resources:
  MyTransactionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: my-fp-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
            - dms.amazonaws.com
            - dynamodb.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: my-lambda-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:ConditionCheckItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:GetItem
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
            - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:*
            - arn:aws:logs:*:*
  GetCompany:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getCompany
      Handler: bank.getCompany
      Runtime: python3.6
      CodeUri: s3://finalproject-smm/4c46881079077d05efe383ca9ec37510
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: BankTable
      - DynamoDBWritePolicy:
          TableName:
            Ref: BankTable
      Environment:
        Variables:
          BANK_TABLE:
            Ref: BankTable
      Events:
        GetCompany:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /company/{companyId}
            Method: PUT
  GetClient:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getClient
      Handler: client.getClient
      Runtime: python3.6
      CodeUri: s3://finalproject-smm/4c46881079077d05efe383ca9ec37510
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: BankTable
      Environment:
        Variables:
          BANK_TABLE:
            Ref: BankTable
      Events:
        GetClients:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /clients/{client_id}
            Method: GET
  PutClient:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putClient
      Handler: client.putClient
      Runtime: python3.6
      CodeUri: s3://finalproject-smm/4c46881079077d05efe383ca9ec37510
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: BankTable
      Environment:
        Variables:
          BANK_TABLE:
            Ref: BankTable
      Events:
        GetClients:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /clients/{client_id}
            Method: PUT
  PutTransaction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putTransaction
      Handler: client.putTransaction
      Runtime: python3.6
      CodeUri: s3://finalproject-smm/4c46881079077d05efe383ca9ec37510
      Role:
        Fn::GetAtt:
        - MyTransactionRole
        - Arn
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: BankTable
      - DynamoDBReadPolicy:
          TableName:
            Ref: BankTable
      - DynamoDBFullAccess:
          TableName:
            Ref: BankTable
      Environment:
        Variables:
          BANK_TABLE:
            Ref: BankTable
      Events:
        GetClients:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /transactions/{transaction_id}
            Method: PUT
  MyAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: bank-api
      StageName: prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: s3://finalproject-smm/33a0f1f0dbfa45d7dc61562179f1d455
  BankTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: bank-table
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      KeySchema:
      - AttributeName: pk
        KeyType: HASH
      - AttributeName: sk
        KeyType: RANGE
      AttributeDefinitions:
      - AttributeName: pk
        AttributeType: S
      - AttributeName: sk
        AttributeType: S
